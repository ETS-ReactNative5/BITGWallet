"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const React = require("react");
const react_native_1 = require("react-native");
const react_native_svg_1 = require("react-native-svg");
const MersenneTwister = require("mersenne-twister");
const Color = require("color");
const constants_1 = require("./constants");
const styles = react_native_1.StyleSheet.create({
    container: {
        overflow: "hidden",
    },
});
class Jazzicon extends React.Component {
    constructor() {
        super(...arguments);
        this.state = Jazzicon.propsToState(this.props);
    }
    static propsToState({ seed, address }) {
        if (address) {
            address = address.toLowerCase();
            if (address.startsWith("0x")) {
                seed = parseInt(address.slice(2, 10), 16);
            }
        }
        const generator = new MersenneTwister(seed);
        const amount = (generator.random() * 30) - (constants_1.wobble / 2);
        return {
            generator,
            colors: constants_1.colors.map((hex) => (new Color(hex)).rotate(amount).hex()),
        };
    }
    componentWillReceiveProps(props) {
        this.setState(Jazzicon.propsToState(props));
    }
    render() {
        const { containerStyle, size } = this.props;
        return (<react_native_1.View style={[
            styles.container, {
                width: size,
                height: size,
                backgroundColor: this.randomColor,
                borderRadius: size / 2,
            },
            containerStyle,
        ]}>
        <react_native_svg_1.Svg width={size} height={size}>
          {Array(constants_1.shapeCount)
            .fill(0)
            .map((_, index) => {
            const center = size / 2;
            const firstRot = this.randomNumber;
            const angle = Math.PI * 2 * firstRot;
            const velocity = size / constants_1.shapeCount * this.randomNumber + (index * size / constants_1.shapeCount);
            const tx = Math.cos(angle) * velocity;
            const ty = Math.sin(angle) * velocity;
            const secondRot = this.randomNumber;
            const rot = (firstRot * 360) + secondRot * 180;
            return (<react_native_svg_1.Rect key={`shape_${index}`} x={0} y={0} width={size} height={size} fill={this.randomColor} transform={`translate(${tx} ${ty}) rotate(${rot.toFixed(1)} ${center} ${center})`}/>);
        })}
        </react_native_svg_1.Svg>
      </react_native_1.View>);
    }
    get randomNumber() {
        const { generator } = this.state;
        return generator.random();
    }
    get randomColor() {
        const { colors } = this.state;
        this.randomNumber;
        return colors
            .splice(Math.floor(colors.length * this.randomNumber), 1)[0];
    }
}
exports.Jazzicon = Jazzicon;
